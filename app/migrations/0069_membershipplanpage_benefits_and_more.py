# Generated by Django 4.0.8 on 2023-11-22 14:58

import django.contrib.postgres.fields
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailcore", "0069_log_entry_jsonfield"),
        ("app", "0068_bookpage_authors_bookpage_forward_by_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="membershipplanpage",
            name="benefits",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(blank=True, max_length=100),
                default=list,
                help_text="List of pithy beneficial features of this plan",
                size=None,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="membershipplanpage",
            name="display_in_quiz_flow",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="membershipplanprice",
            name="benefits",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(blank=True, max_length=100),
                default=list,
                help_text="List of pithy beneficial features of this plan",
                size=None,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="membershipplanprice",
            name="title",
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name="membershipplanprice",
            name="products",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True,
                help_text="(Not used in the new flow). The stripe product that the user will be subscribed to. If multiple products are set here, then the user will be asked to pick which one they want, e.g. Classic or Contemporary books.",
                to="app.lbcproduct",
            ),
        ),
        migrations.CreateModel(
            name="SyllabusPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("description", wagtail.fields.RichTextField(blank=True, null=True)),
                (
                    "book_types",
                    models.CharField(
                        choices=[
                            ("classic", "classic"),
                            ("contemporary", "contemporary"),
                            ("all-books", "all-books"),
                        ],
                        default="all-books",
                        help_text="Used to display relevant books",
                        max_length=100,
                    ),
                ),
                (
                    "stripe_product",
                    models.ForeignKey(
                        help_text="The stripe product that the user will be subscribed to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="syllabi",
                        to="app.lbcproduct",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.AddField(
            model_name="membershipplanpage",
            name="syllabi",
            field=modelcluster.fields.ParentalManyToManyField(
                help_text="The syllabi available for this plan",
                related_name="plans",
                to="app.syllabuspage",
            ),
        ),
    ]

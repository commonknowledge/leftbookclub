# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "app"
version = "0.1.0"
description = "A django project using groundwork framework"
authors = []

[tool.poetry.dependencies]
python = "^3.9"
boto3 = '>=1.17.77'
botocore = '>=1.20.77'
requests = '>=2.25.1'
rich = "^10.7.0"
django-anymail = '>=8.3'
django-filter = '>=2.4.0'
djangorestframework = '>=3.12.4'
django-taggit = "*"
django-vite = "^1.2.1"
dj-database-url = '>=0.5.0'
django-storages = "*"
groundwork-django = '^0.1.3'
gunicorn = '>=20.1.0'
wagtail = '^2.16'
psycopg2 = '>=2.8.6'
wagtail-transfer = { git = "https://github.com/wagtail/wagtail-transfer.git", branch = "master" }
django-livereload-server = "^0.4"
stripe = "^2.68.0"
django-mathfilters = "^1.0.0"
django-money = "^2.1.1"
# dj-stripe = { git = "https://github.com/commonknowledge/dj-stripe.git", branch = "fixes" }
# poetry add git+https://github.com/commonknowledge/dj-stripe.git#fixes
pre-commit = "^2.17.0"
wagtail-autocomplete = "^0.7.0"
django-allauth = "^0.50.0"
django-bootstrap5 = "^21.3"
django-countries = "^7.3.2"
django-extensions = "^3.1.5"
wagtailfontawesome = "^1.2.1"
django-gravatar2 = "^1.4.4"
django-active-link = "^0.1.8"
wagtailmenus = { git = "https://github.com/jazzband/wagtailmenus.git", rev = "44ba8f1c1986b474737bf9f5aacbb0045b692a85" }
django-mjml = "^0.12.0"
wagtail-seo = "^1.0.0"
ShopifyAPI = "^11.0.0"
python-dateutil = "^2.8.2"
wagtail-admin-list-controls = "^0.1.7"
Django = {extras = ["bcrypt"], version = "^4.0.4"}
django-import-export = "^2.8.0"
pycountry = "^22.3.5"
dj-stripe = {git = "https://github.com/commonknowledge/dj-stripe.git", rev = "fixes"}
django-shopify-webhook = {git = "https://github.com/discolabs/django-shopify-webhook.git"}

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = {version = "^22", allow-prereleases = true}
darglint = "^1.8.0"
django-debug-toolbar = "*"
isort = {extras = ["colors"], version = "^5.9.3"}
pre-commit = "^2.14.0"
pylint = "^2.13.8"
pydocstyle = "^6.1.1"
pytest = "^6.2.4"
pytest-django = "^4.4.0"
pyupgrade = "^2.24.0"
safety = "^1.10.3"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | node_modules
    | build
    | dist
    | vite
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

markers = [
    "integration_test: marks tests as integrtation tests (not run in make lint)",
]

DJANGO_SETTINGS_MODULE = "app.settings.test"
python_files = "tests.py test_*.py *_tests.py"
